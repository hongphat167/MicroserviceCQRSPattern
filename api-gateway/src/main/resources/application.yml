server:
  port: 8080

spring:
  application:
    name: gateway-service
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: employeeservice
          uri: lb://employeeservice
          predicates:
            - Path=/api/v1/employees/**
          filters:
            - RewritePath=/api/v1/employees/(?<segment>.*), /api/v1/employees/$\{segment}
            - name: CircuitBreaker
              args:
                name: employeeService
                fallbackUri: forward:/fallback/employeeservice
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
                key-resolver: "#{@keyResolver}"
            - name: KeyAuthFilter

        - id: bookservice
          uri: lb://bookservice
          predicates:
            - Path=/api/v1/books/**
          filters:
            - RewritePath=/api/v1/books/(?<segment>.*), /api/v1/books/$\{segment}
            - name: CircuitBreaker
              args:
                name: bookService
                fallbackUri: forward:/fallback/bookservice
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
                key-resolver: "#{@keyResolver}"
            - name: KeyAuthFilter

  # Add Redis configuration
  data:
    redis:
      host: localhost
      port: 6379
      password: mypassword

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    reactor.netty: DEBUG

eureka:
  instance:
    hostname: localhost
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true

apiKey: hongphat